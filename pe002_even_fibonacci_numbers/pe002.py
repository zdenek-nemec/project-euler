#!/usr/bin/env python3

"""
PE-002: Even Fibonacci numbers
------------------------------

Solution for Project Euler problem 2 (https://projecteuler.net/problem=2).

Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

.. math::

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

..

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
"""


START = [1, 2]
LIMIT = 4000000


class Fibonacci(object):
    def __init__(self, start):
        self._numbers = start

    def add_next(self):
        next_number = self._numbers[-2] + self._numbers[-1]
        self._numbers.append(next_number)

    def get_all(self):
        return self._numbers

    def get_last(self):
        return self._numbers[-1]


class Solution(object):
    def __init__(self, start, limit):
        self._start = start
        self._limit = limit

    def solve(self):
        fibonacci = Fibonacci(self._start)
        while fibonacci.get_last() < self._limit:
            fibonacci.add_next()
        sum_of_even = 0
        for number in fibonacci.get_all():
            if number > self._limit:
                break
            elif number % 2 == 0:
                sum_of_even += number
        return sum_of_even


def main():
    print(Solution(START, LIMIT).solve())


if __name__ == '__main__':
    main()
